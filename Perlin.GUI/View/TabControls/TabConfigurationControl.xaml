<UserControl x:Class="Perlin.GUI.View.TabControls.TabConfigurationControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:extensions="clr-namespace:Perlin.GUI.Extensions"
             xmlns:models="clr-namespace:Perlin.GUI.Models"
             xmlns:viewModels="clr-namespace:Perlin.GUI.ViewModel"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             mc:Ignorable="d" 
             d:DesignHeight="500" d:DesignWidth="700"
             d:DataContext="{d:DesignInstance viewModels:ConfigurationViewModel, IsDesignTimeCreatable=True}">
    <UserControl.Resources>
        <Style TargetType="{x:Type Expander}">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="IsExpanded" Value="False"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="IsExpanded" Value="True"/>
                </Trigger>
            </Style.Triggers>
            <Setter Property="ExpandDirection" Value="Left"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="DarkTurquoise"/>
            <Setter Property="Background">
                <Setter.Value>
                    <RadialGradientBrush GradientOrigin="1.0 1.0">
                        <GradientStop Color="Tomato" Offset="0"/>
                        <GradientStop Color="White" Offset="0.5"/>
                        <GradientStop Color="Yellow" Offset="0.7"/>
                        <GradientStop Color="Turquoise" Offset="1"/>
                    </RadialGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ElementBorder" TargetType="{x:Type Border}">
            <Setter Property="BorderBrush" Value="Teal"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Background" Value="SteelBlue"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="CornerRadius" Value="0,12,0,0"/>
            <Setter Property="Height" Value="Auto"/>
        </Style>
        <Style x:Key="InfoLabel" TargetType="{x:Type Label}">
            <Setter Property="FontWeight" Value="Heavy"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Margin" Value="5,0,20,0"/>
        </Style>
        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <ContentPresenter Content="{TemplateBinding Content}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Border Margin="5"
            Padding="5"
            BorderBrush="Navy"
            CornerRadius="0,12,12,12">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            
            <!-- Options menu -->
            <Grid ZIndex="99" 
                  IsEnabled="{Binding ProgramState, Converter={StaticResource EnumToBoolConverter}, ConverterParameter=!ComputingFile}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                
                <!-- Ogólne -->
                <Canvas Grid.Row="0">
                    <Expander>
                        <Expander.Header>
                            <TextBlock Text="Ogólne" Margin="3 3 3 3">
                                <TextBlock.LayoutTransform >
                                    <RotateTransform Angle="90"/>
                                </TextBlock.LayoutTransform>
                            </TextBlock>
                        </Expander.Header>
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <WrapPanel>
                                <!-- Select ASM/C -->
                                <Border Style="{StaticResource ElementBorder}">
                                    <StackPanel>
                                        <Label Style="{StaticResource InfoLabel}"
                        Content="Biblioteka"/>
                                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                            <RadioButton Content="Asembler" 
                                IsChecked="{Binding GeneratingLibrary, Converter={StaticResource EnumToBoolConverter}, ConverterParameter=Asm}"
                                VerticalAlignment="Center"
                                Margin="25,0,0,0"/>
                                            <RadioButton Content="C"
                                IsChecked="{Binding GeneratingLibrary, Converter={StaticResource EnumToBoolConverter}, ConverterParameter=PureC}"
                                VerticalAlignment="Center"
                                Margin="25,0,0,0"/>
                                        </StackPanel>
                                    </StackPanel>
                                </Border>

                                <!-- Select bitmap/gif -->
                                <Border Style="{StaticResource ElementBorder}">
                                    <StackPanel>
                                        <Label Style="{StaticResource InfoLabel}"
                        Content="Rodzaj obiektu"/>
                                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                            <RadioButton Content="Bitmap" 
                                IsChecked="{Binding GeneratedFileType, Converter={StaticResource EnumToBoolConverter}, ConverterParameter=Bitmap}"
                                VerticalAlignment="Center"
                                Margin="25,0,0,0"/>
                                            <RadioButton Content="GIF"
                                IsChecked="{Binding GeneratedFileType, Converter={StaticResource EnumToBoolConverter}, ConverterParameter=Gif}"
                                VerticalAlignment="Center"
                                Margin="25,0,0,0"/>
                                        </StackPanel>
                                    </StackPanel>
                                </Border>

                                <!-- Width and height -->
                                <Border Style="{StaticResource ElementBorder}">
                                    <StackPanel>
                                        <Label Style="{StaticResource InfoLabel}"
                        Content="Rozmiar"/>
                                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                            <TextBox Text="{Binding Width}"/>
                                            <TextBlock Text="x"/>
                                            <TextBox Text="{Binding Height}"/>
                                            <TextBlock Text="px"/>
                                        </StackPanel>
                                    </StackPanel>
                                </Border>
                            </WrapPanel>
                        </StackPanel>
                    </Expander>
                </Canvas>

                <!-- Generator -->
                <Canvas Grid.Row="1">
                    <Expander>
                        <Expander.Header>
                            <TextBlock Text="Generator" Margin="3 6 3 3">
                                <TextBlock.LayoutTransform>
                                    <RotateTransform Angle="90"/>
                                </TextBlock.LayoutTransform>
                            </TextBlock>
                        </Expander.Header>
                        <StackPanel Orientation="Horizontal">
                            <!-- Select number of threads -->
                            <Border Style="{StaticResource ElementBorder}">
                                <StackPanel>
                                    <Label Style="{StaticResource InfoLabel}"
                                Content="Liczba wątków"/>
                                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                        <Slider x:Name="NumOfThreadsSlider"
                                    Minimum="1" Maximum="16" 
                                    Width="100"  Margin="25,0,0,0"
                                    Value="{Binding NumberOfThreads}"
                                    VerticalAlignment="Center"
                                    IsEnabled="{Binding ElementName=ThreadsAutodetectCheckBox, Path=IsChecked, Converter={StaticResource InverseBooleanConverter}}"/>
                                        <Label Style="{StaticResource InfoLabel}" 
                                    Content="{Binding ElementName=NumOfThreadsSlider, Path=Value}"/>
                                    </StackPanel>
                                    <CheckBox x:Name="ThreadsAutodetectCheckBox"
                                    HorizontalAlignment="Center" Content="Wykryj automatycznie"
                                    Command="{Binding IsThreadAutodetectCheckedCommand}"
                                    CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"/>
                                </StackPanel>
                            </Border>

                            <!-- Get number of octaves -->
                            <Border Style="{StaticResource ElementBorder}">
                                <StackPanel>
                                    <Label Style="{StaticResource InfoLabel}"
                        Content="Liczba oktaw"/>
                                    <StackPanel Orientation="Horizontal">
                                        <Slider Minimum="2" Maximum="60" 
                        Width="100" x:Name="NumOfOctaveSlider"
                        Value="{Binding NumberOfOctaves}"
                        VerticalAlignment="Center"
                        Margin="25,0,0,0"/>
                                        <Label Style="{StaticResource InfoLabel}" 
                        Content="{Binding ElementName=NumOfOctaveSlider, Path=Value}"/>
                                    </StackPanel>
                                </StackPanel>
                            </Border>

                            <!-- Persistence -->
                            <Border Style="{StaticResource ElementBorder}">
                                <StackPanel>
                                    <Label Style="{StaticResource InfoLabel}"
                                Content="Persystencja"/>
                                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                        <TextBox Width="100" Text="{Binding Persistence}"
                                        PreviewTextInput="PreviewPersistenceInput" 
                                        DataObject.Pasting="PastingPersistenceHandler"
                                        />
                                    </StackPanel>
                                </StackPanel>
                            </Border>
                        </StackPanel>
                    </Expander >
                </Canvas>

                <!-- Bitmapa -->
                <Canvas Grid.Row="2">
                    <Expander IsEnabled="{Binding GeneratedFileType, Converter={StaticResource EnumToBoolConverter}, ConverterParameter=!Gif, Mode=OneWay}">
                        <Expander.Header>
                            <TextBlock Text="Bitmapa" Margin="3 0 3 3">
                                <TextBlock.LayoutTransform >
                                    <RotateTransform Angle="90"/>
                                </TextBlock.LayoutTransform>
                            </TextBlock>
                        </Expander.Header>
                        <StackPanel Orientation="Horizontal">

                            <!-- Select output effect -->
                            <Border Style="{StaticResource ElementBorder}">
                                <StackPanel>
                                    <Label Style="{StaticResource InfoLabel}"
                    Content="Efekt"/>
                                    <StackPanel Orientation="Horizontal">
                                        <ComboBox ItemsSource="{Binding Source={extensions:Enumeration {x:Type models:NoiseEffects}}}"
                            DisplayMemberPath="Description"
                            SelectedValue="{Binding NoiseEffectBmp}"
                            SelectedValuePath="Value"
                            Margin="25,0,25,0"
                            Width="100"/>
                                    </StackPanel>
                                </StackPanel>
                            </Border>

                            <!-- Select output color -->
                            <Border Style="{StaticResource ElementBorder}">
                                <StackPanel>
                                    <Label Style="{StaticResource InfoLabel}"
                    Content="Kolor"/>
                                    <StackPanel Orientation="Horizontal">
                                        <xctk:ColorPicker SelectedColor="{Binding NoiseColorBmp}"/>
                                    </StackPanel>
                                </StackPanel>
                            </Border>
                        </StackPanel>
                    </Expander>
                </Canvas>

                <!-- GIF -->
                <Canvas Grid.Row="3">
                    <Expander IsEnabled="{Binding GeneratedFileType, Converter={StaticResource EnumToBoolConverter}, ConverterParameter=!Bitmap, Mode=OneWay}">
                        <Expander.Header>
                            <TextBlock Text="GIF" Margin="3 10 3 3">
                                <TextBlock.LayoutTransform >
                                    <RotateTransform Angle="90"/>
                                </TextBlock.LayoutTransform>
                            </TextBlock>
                        </Expander.Header>
                        <StackPanel Orientation="Horizontal">
                            <Border Style="{StaticResource ElementBorder}">
                                <StackPanel>
                                    <Label Style="{StaticResource InfoLabel}"
                           Content="Efekt"/>
                                    <StackPanel Orientation="Horizontal">
                                        <ComboBox ItemsSource="{Binding Source={extensions:Enumeration {x:Type models:NoiseEffectsGIF}}}"
                                  DisplayMemberPath="Description"
                                  SelectedValue="{Binding NoiseEffectGif}"
                                  SelectedValuePath="Value"
                                  Margin="25,0,25,0"
                                  Width="100"/>
                                    </StackPanel>
                                </StackPanel>
                            </Border>

                            <!-- Select output color -->
                            <Border Style="{StaticResource ElementBorder}">
                                <StackPanel>
                                    <Label Style="{StaticResource InfoLabel}"
                           Content="Kolor"/>
                                    <StackPanel Orientation="Horizontal">
                                        <xctk:ColorPicker SelectedColor="{Binding NoiseColorGif}"/>
                                    </StackPanel>
                                </StackPanel>
                            </Border>
                        </StackPanel>
                    </Expander>
                </Canvas>
            </Grid>

            <!-- Image panel -->
            <Border Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="2">
                <Grid>
                    <Image Visibility="{Binding GeneratedFileArray, Converter={StaticResource NullToVisibilityConverter}}"
                               Source="{Binding GeneratedFileArray, Converter={StaticResource ByteArrayToBitmapImageConverter}, Mode=OneWay}"/>
                    <Canvas Margin="40 20 40 20" ZIndex="0" Background="PaleGreen" Opacity="0.6"
                            Visibility="{Binding GeneratedFileArray, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=Inverse}"/>
                </Grid>
            </Border>

            <!-- Bottom panel -->
            <Border Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" 
                    Padding="5" Margin="5">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button Width="150"
                            Margin="5"
                            Content="Generuj" FontSize="25"
                            Command="{Binding GeneratePelinNoiseCommand}"
                            IsEnabled="{Binding ProgramState, Converter={StaticResource EnumToBoolConverter}, ConverterParameter=!ComputingFile, Mode=OneWay}"/>
                    <Button Width="150"
                            Margin="5"
                            Content="Zapisz" FontSize="25"
                            Command="{Binding SaveGeneratedFileCommand}"
                            IsEnabled="{Binding ProgramState, Converter={StaticResource EnumToBoolConverter}, ConverterParameter=GeneratedFile, Mode=OneWay}"/>
                </StackPanel>
            </Border>
            <TextBlock Grid.Row="2" Grid.Column="1" FontSize="20" 
                       HorizontalAlignment="Right" VerticalAlignment="Center"
                       Margin="0 0 20 0">
                <TextBlock.Text>
                    <MultiBinding StringFormat="{}{0:d2}min {1:d2}s {2:d3}ms">
                        <Binding Path="GenerationTime.Minutes"/>
                        <Binding Path="GenerationTime.Seconds"/>
                        <Binding Path="GenerationTime.Milliseconds"/>
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
        </Grid>
    </Border>
</UserControl>